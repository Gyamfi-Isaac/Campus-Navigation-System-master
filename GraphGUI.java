import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GraphGUI extends JFrame {
    private JButton runDijkstraButton;
    private JTextArea outputArea;

    public GraphGUI() {
        setTitle("Graph Visualizer");
        setSize(600, 900);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        runDijkstraButton = new JButton("Run Dijkstra");
        outputArea = new JTextArea(10, 30);
        outputArea.setEditable(false);

        runDijkstraButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                runDijkstra();
            }
        });

        JPanel panel = new JPanel();
        panel.add(runDijkstraButton);
        panel.add(new JScrollPane(outputArea));

        add(panel);
    }

    private void runDijkstra() {
        int[][] graph = {
                {00,25,00,00,00,00,00,00,50,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {25,00,30,05,00,00,00,00,00, 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,30,00,10,10,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,10,00},
                {05,00,00,00,05,10,05,00,00,20,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,10,00,05,00,05,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,10},
                {00,00,05,10,00,00,05,05,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05},
                {00,00,00,05,00,05,00,05,00,00,00,00,00,00,00,00,40,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,05,05,00,00,00,23,00,00,00,00,00,00,20,00,00,00,00,00,00,00,00,00,00},
                {05,00,00,00,05,10,05,00,00,20,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {50,00,00,20,00,00,00,00,20,00,30,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,15,00,00,00,00,15,30,00,10,70,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,10,00,00,35,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,50,00,00,00,00,50,00,70,35,00,15,20,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,15,00,05,02,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,40,00,00,00,00,00,20,05,00,00,02,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,02,00,00,15,80,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,02,15,00,20,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,20,00,00,00,00,00,00,00,80,20,00,20,00,00,100,00,23,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,20,00,70,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,70,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,00,25,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,10,00,00,00,00,00,00,00,00,23,00,00,00,00,00,00,00,05,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,00,05,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},
                {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00}
        };

        DijkstraAlgorithm dijkstra = new DijkstraAlgorithm();
        int[] distances = dijkstra.dijkstra(graph, 0);

        outputArea.setText("Vertex\t\tDistance from Source\n");
        for (int i = 0; i < distances.length; i++) {
            outputArea.append(i + "\t\t" + distances[i] + "\n");
        }
    }

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(() -> new GraphGUI().setVisible(true));
    }
}
